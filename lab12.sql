CREATE DATABASE lab12;

CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL,
    PRIMARY KEY(id)
);

INSERT INTO accounts(name,balance)
VALUES('Bob',10000);
--To start a transaction, you use the following statement:
BEGIN;
--For example, the following statements start a new transaction
-- and insert a new account into the accounts table:
INSERT INTO accounts(name,balance)
VALUES('Alice',10000);
--From the current session, you can see the change by
-- querying the accounts table:
SELECT
    id,
    name,
    balance
FROM
    accounts;
--However, if you start a new session and execute
-- the query above, you will not see the change.
SELECT
    id,
    name,
    balance
FROM
    accounts;
--To make the change become visible to other sessions (or users)
-- you need to commit the transaction by using the COMMIT TRANSACTION statement:
COMMIT;
--From other sessions, you can view the change
SELECT
    id,
    name,
    balance
FROM
    accounts;

BEGIN;

UPDATE accounts
SET balance = balance - 1000
WHERE id = 1;
--the change is not visible in other sessions.
SELECT
    id,
    name,
    balance
FROM
    accounts;

INSERT INTO accounts(name, balance)
VALUES ('Jack', 0);

UPDATE accounts
SET balance = balance + 1000
WHERE id = 2;
--This change also is not visible to the second session until we commit it:
COMMIT;
--Now, you can view the change from any session:
SELECT
    id,
    name,
    balance
FROM
    accounts;

--To roll back or undo the change of the current transaction,
-- you use any of the following statement: ROLLBACK

INSERT INTO accounts(name, balance)
VALUES('Jack',0);

BEGIN;

UPDATE accounts
SET balance = balance - 1500
WHERE id = 1;

UPDATE accounts
SET balance = balance + 1500
WHERE id = 3;
-- id is not correct, so this was a mistake
--To undo the change, you execute the ROLLBACK statement:
ROLLBACK;

SELECT
    id,
    name,
    balance
FROM
    accounts;
--the account balances remain the same as they were before the transaction.

CREATE TABLE students(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    gpa REAL NOT NULL,
    PRIMARY KEY(id)
);

INSERT INTO students(name, gpa)
VALUES ('Nurai', 4.0),
       ('Farida', 3.0);

BEGIN;
INSERT INTO students(name, gpa)
VALUES ('Zhanel', 4.0),
       ('Asem', 4.0);

COMMIT;

BEGIN;

UPDATE students
SET gpa = gpa - 1.0
WHERE id = 1;

UPDATE students
SET gpa = gpa + 1.0
WHERE id = 2;

SELECT id, name, gpa
FROM students;

COMMIT;

ROLLBACK;

SELECT id, name, gpa
FROM students;



